#!/usr/bin/python3
from os.path import isfile
from sys import argv
from subprocess import PIPE, STDOUT, run

def travis(targets):
	print("Building...")
	if run(["sbt", "compile"]).returncode:
		return False		
	run(["sbt", "start-script"])
	for t in targets:
		print("Running %s..."%t)
		proc = run(["target/start", "Prob%s"%t], stdout=PIPE, stderr=STDOUT, universal_newlines=True)
		print(proc.stdout)
		if proc.returncode or "Success" not in proc.stdout:
			return False
	return True

def build(targets):
	for t in targets:
		print("Building %s..."%t)
		proc = run(["scalac", "-classpath", "target/scala-2.12/classes", "-d", "target/scala-2.12/classes", "Prob%s.scala"%t], input=t+"\n", stdout=PIPE, stderr=STDOUT, universal_newlines=True)
		print(proc.stdout)
		if proc.returncode != 0:
			return False
	return True

def exe(targets):
	print("Running...")
	for t in targets:
		proc = run(["scala", "-classpath", "target/scala-2.12/classes", "Prob%s"%t], stdout=PIPE, stderr=STDOUT, universal_newlines=True)
		if proc.returncode == 0 and "Success" in proc.stdout:
			print(proc.stdout, end="")
		else:
			print(proc.stdout)
			return False
	return True

def debug(targets):
	print("Debugging...")
	if not build(targets):
		return False
	for t in targets:
		proc = run(["target/start", "Prob%s"%t])
		if proc.returncode != 0:
			return False
	return True

if argv[1] == "clean":
	for i in range(1, 64):
		run(["rm", "-rf", "Prob%d.class"%i])
		run(["rm", "-rf", "Prob%d$.class"%i])
	exit(0)
elif len(argv) < 3:
	print("Missing problem numbers.")

pretargets = argv[2:]
if pretargets[0] == "all":
	pretargets = map(str, range(1,64))

targets = []
for j in pretargets:
	if len(j) == 1:
		j = "0" + j
	if isfile("Prob%s.scala"%j):
		targets.append(j)

proc = run(["scalac", "-classpath", "target/scala-2.12/classes", "-d", "target/scala-2.12/classes", "Util.scala"], stdout=PIPE, stderr=STDOUT, universal_newlines=True)

if argv[1] == "run":
	if not exe(targets):
		exit(1)
elif argv[1] == "build":
	if not build(targets):
		exit(1)
elif argv[1] == "debug":
	if not debug(targets):
		exit(1)
elif argv[1] == "travis":
	if not travis(targets):
		exit(1)
else:
	print("Unrecognized command. Use build, debug, or run followed by problems numbers.")
	exit(1)
exit(0)
